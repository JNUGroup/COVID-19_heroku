import { ElementRef, OnChanges, SimpleChanges, EventEmitter } from '@angular/core';
import { GoogleChartsLoaderService } from '../google-charts-loader.service';
import { GoogleChartInterface, GoogleChartComponentInterface } from '../google-charts-interfaces';
import { ChartReadyEvent } from './chart-ready-event';
import { ChartErrorEvent } from './chart-error-event';
import { ChartSelectEvent } from './chart-select-event';
import { ChartMouseOverEvent, ChartMouseOutEvent } from './chart-mouse-event';
import { RegionClickEvent } from './geochart-events';
export declare class GoogleChartComponent implements OnChanges, GoogleChartComponentInterface {
    data: GoogleChartInterface;
    chartReady: EventEmitter<ChartReadyEvent>;
    chartReadyOneTime: EventEmitter<ChartReadyEvent>;
    chartError: EventEmitter<ChartErrorEvent>;
    chartErrorOneTime: EventEmitter<ChartErrorEvent>;
    chartSelect: EventEmitter<ChartSelectEvent>;
    chartSelectOneTime: EventEmitter<ChartSelectEvent>;
    mouseOver: EventEmitter<ChartMouseOverEvent>;
    mouseOverOneTime: EventEmitter<ChartMouseOverEvent>;
    mouseOut: EventEmitter<ChartMouseOutEvent>;
    mouseOutOneTime: EventEmitter<ChartMouseOutEvent>;
    regionClick: EventEmitter<RegionClickEvent>;
    regionClickOneTime: EventEmitter<RegionClickEvent>;
    wrapper: any;
    private cli;
    private options;
    private el;
    private loaderService;
    constructor(el: ElementRef, loaderService: GoogleChartsLoaderService);
    ngOnChanges(changes: SimpleChanges): void;
    draw(): void;
    private _draw;
    /**
     * Applies formatters to data columns, if defined
     */
    private reformat;
    private getSelectorBySeriesType;
    /**
     * Given a column number, counts how many
     * columns have rol=="data". Those are mapped
     * one-to-one to the series array. When rol is not defined
     * a column of type number means a series column.
     * @param column to inspect
     */
    private getSeriesByColumn;
    private getBoundingBoxForItem;
    private getValueAtPosition;
    private getColumnTypeAtPosition;
    private getColumnLabelAtPosition;
    private getHTMLTooltip;
    private parseMouseEvent;
    private unregisterEvents;
    private registerChartEvents;
    private registerChartWrapperEvents;
    private addListener;
    private addOneTimeListener;
    private mouseOverListener;
    private mouseOutListener;
    private selectListener;
    private convertOptions;
}
