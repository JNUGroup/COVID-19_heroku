import { DatepickerRenderOptions, BsDatepickerViewMode, DatepickerDateCustomClasses } from './models';
/**
 * For date range picker there are `BsDaterangepickerConfig` which inherits all properties,
 * except `displayMonths`, for range picker it default to `2`
 */
import * as ɵngcc0 from '@angular/core';
export declare class BsDatepickerConfig implements DatepickerRenderOptions {
    /** sets use adaptive position */
    adaptivePosition: boolean;
    /** sets use UTC date time format */
    useUtc: boolean;
    /** turn on/off animation */
    isAnimated: boolean;
    value?: Date | Date[];
    isDisabled?: boolean;
    /**
     * Default min date for all date/range pickers
     */
    minDate?: Date;
    /**
     * Default max date for all date/range pickers
     */
    maxDate?: Date;
    /**
     * Default date custom classes for all date/range pickers
     */
    dateCustomClasses: DatepickerDateCustomClasses[];
    daysDisabled?: number[];
    /**
     * Disable specific dates
     */
    datesDisabled?: Date[];
    /**
     * Makes dates from other months active
     */
    selectFromOtherMonth?: boolean;
    /**
     * Allows select first date of the week by click on week number
     */
    selectWeek?: boolean;
    /**
     * Shows previous and current month, instead of current and next (dateRangePicker only)
     */
    showPreviousMonth?: boolean;
    /**
     * Add class to current day
     */
    customTodayClass?: string;
    /**
     * Default mode for all date pickers
     */
    minMode?: BsDatepickerViewMode;
    /** CSS class which will be applied to datepicker container,
     * usually used to set color theme
     */
    containerClass: string;
    displayMonths: number;
    /**
     * Allows to hide week numbers in datepicker
     */
    showWeekNumbers: boolean;
    dateInputFormat: string;
    rangeSeparator: string;
    /**
     * Date format for date range input field
     */
    rangeInputFormat: string;
    monthTitle: string;
    yearTitle: string;
    dayLabel: string;
    monthLabel: string;
    yearLabel: string;
    weekNumbers: string;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BsDatepickerConfig, never>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<BsDatepickerConfig>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnMtZGF0ZXBpY2tlci5jb25maWcuZC50cyIsInNvdXJjZXMiOlsiYnMtZGF0ZXBpY2tlci5jb25maWcuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUFDQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERhdGVwaWNrZXJSZW5kZXJPcHRpb25zLCBCc0RhdGVwaWNrZXJWaWV3TW9kZSwgRGF0ZXBpY2tlckRhdGVDdXN0b21DbGFzc2VzIH0gZnJvbSAnLi9tb2RlbHMnO1xuLyoqXG4gKiBGb3IgZGF0ZSByYW5nZSBwaWNrZXIgdGhlcmUgYXJlIGBCc0RhdGVyYW5nZXBpY2tlckNvbmZpZ2Agd2hpY2ggaW5oZXJpdHMgYWxsIHByb3BlcnRpZXMsXG4gKiBleGNlcHQgYGRpc3BsYXlNb250aHNgLCBmb3IgcmFuZ2UgcGlja2VyIGl0IGRlZmF1bHQgdG8gYDJgXG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEJzRGF0ZXBpY2tlckNvbmZpZyBpbXBsZW1lbnRzIERhdGVwaWNrZXJSZW5kZXJPcHRpb25zIHtcbiAgICAvKiogc2V0cyB1c2UgYWRhcHRpdmUgcG9zaXRpb24gKi9cbiAgICBhZGFwdGl2ZVBvc2l0aW9uOiBib29sZWFuO1xuICAgIC8qKiBzZXRzIHVzZSBVVEMgZGF0ZSB0aW1lIGZvcm1hdCAqL1xuICAgIHVzZVV0YzogYm9vbGVhbjtcbiAgICAvKiogdHVybiBvbi9vZmYgYW5pbWF0aW9uICovXG4gICAgaXNBbmltYXRlZDogYm9vbGVhbjtcbiAgICB2YWx1ZT86IERhdGUgfCBEYXRlW107XG4gICAgaXNEaXNhYmxlZD86IGJvb2xlYW47XG4gICAgLyoqXG4gICAgICogRGVmYXVsdCBtaW4gZGF0ZSBmb3IgYWxsIGRhdGUvcmFuZ2UgcGlja2Vyc1xuICAgICAqL1xuICAgIG1pbkRhdGU/OiBEYXRlO1xuICAgIC8qKlxuICAgICAqIERlZmF1bHQgbWF4IGRhdGUgZm9yIGFsbCBkYXRlL3JhbmdlIHBpY2tlcnNcbiAgICAgKi9cbiAgICBtYXhEYXRlPzogRGF0ZTtcbiAgICAvKipcbiAgICAgKiBEZWZhdWx0IGRhdGUgY3VzdG9tIGNsYXNzZXMgZm9yIGFsbCBkYXRlL3JhbmdlIHBpY2tlcnNcbiAgICAgKi9cbiAgICBkYXRlQ3VzdG9tQ2xhc3NlczogRGF0ZXBpY2tlckRhdGVDdXN0b21DbGFzc2VzW107XG4gICAgZGF5c0Rpc2FibGVkPzogbnVtYmVyW107XG4gICAgLyoqXG4gICAgICogRGlzYWJsZSBzcGVjaWZpYyBkYXRlc1xuICAgICAqL1xuICAgIGRhdGVzRGlzYWJsZWQ/OiBEYXRlW107XG4gICAgLyoqXG4gICAgICogTWFrZXMgZGF0ZXMgZnJvbSBvdGhlciBtb250aHMgYWN0aXZlXG4gICAgICovXG4gICAgc2VsZWN0RnJvbU90aGVyTW9udGg/OiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIEFsbG93cyBzZWxlY3QgZmlyc3QgZGF0ZSBvZiB0aGUgd2VlayBieSBjbGljayBvbiB3ZWVrIG51bWJlclxuICAgICAqL1xuICAgIHNlbGVjdFdlZWs/OiBib29sZWFuO1xuICAgIC8qKlxuICAgICAqIFNob3dzIHByZXZpb3VzIGFuZCBjdXJyZW50IG1vbnRoLCBpbnN0ZWFkIG9mIGN1cnJlbnQgYW5kIG5leHQgKGRhdGVSYW5nZVBpY2tlciBvbmx5KVxuICAgICAqL1xuICAgIHNob3dQcmV2aW91c01vbnRoPzogYm9vbGVhbjtcbiAgICAvKipcbiAgICAgKiBBZGQgY2xhc3MgdG8gY3VycmVudCBkYXlcbiAgICAgKi9cbiAgICBjdXN0b21Ub2RheUNsYXNzPzogc3RyaW5nO1xuICAgIC8qKlxuICAgICAqIERlZmF1bHQgbW9kZSBmb3IgYWxsIGRhdGUgcGlja2Vyc1xuICAgICAqL1xuICAgIG1pbk1vZGU/OiBCc0RhdGVwaWNrZXJWaWV3TW9kZTtcbiAgICAvKiogQ1NTIGNsYXNzIHdoaWNoIHdpbGwgYmUgYXBwbGllZCB0byBkYXRlcGlja2VyIGNvbnRhaW5lcixcbiAgICAgKiB1c3VhbGx5IHVzZWQgdG8gc2V0IGNvbG9yIHRoZW1lXG4gICAgICovXG4gICAgY29udGFpbmVyQ2xhc3M6IHN0cmluZztcbiAgICBkaXNwbGF5TW9udGhzOiBudW1iZXI7XG4gICAgLyoqXG4gICAgICogQWxsb3dzIHRvIGhpZGUgd2VlayBudW1iZXJzIGluIGRhdGVwaWNrZXJcbiAgICAgKi9cbiAgICBzaG93V2Vla051bWJlcnM6IGJvb2xlYW47XG4gICAgZGF0ZUlucHV0Rm9ybWF0OiBzdHJpbmc7XG4gICAgcmFuZ2VTZXBhcmF0b3I6IHN0cmluZztcbiAgICAvKipcbiAgICAgKiBEYXRlIGZvcm1hdCBmb3IgZGF0ZSByYW5nZSBpbnB1dCBmaWVsZFxuICAgICAqL1xuICAgIHJhbmdlSW5wdXRGb3JtYXQ6IHN0cmluZztcbiAgICBtb250aFRpdGxlOiBzdHJpbmc7XG4gICAgeWVhclRpdGxlOiBzdHJpbmc7XG4gICAgZGF5TGFiZWw6IHN0cmluZztcbiAgICBtb250aExhYmVsOiBzdHJpbmc7XG4gICAgeWVhckxhYmVsOiBzdHJpbmc7XG4gICAgd2Vla051bWJlcnM6IHN0cmluZztcbn1cbiJdfQ==