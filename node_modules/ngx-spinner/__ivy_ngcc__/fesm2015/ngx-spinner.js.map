{"version":3,"file":"ngx-spinner.js","sources":["ng:/ngx-spinner/lib/ngx-spinner.enum.ts","ng:/ngx-spinner/lib/ngx-spinner.service.ts","ng:/ngx-spinner/lib/ngx-spinner.component.ts","ng:/ngx-spinner/lib/ngx-spinner.module.ts","ng:/ngx-spinner/public_api.ts","ng:/ngx-spinner/ngx-spinner.ts"],"names":[],"mappings":"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","sourcesContent":["export const LOADERS = {\n  'ball-8bits': 16,\n  'ball-atom': 4,\n  'ball-beat': 3,\n  'ball-circus': 5,\n  'ball-climbing-dot': 4,\n  'ball-clip-rotate': 1,\n  'ball-clip-rotate-multiple': 2,\n  'ball-clip-rotate-pulse': 2,\n  'ball-elastic-dots': 5,\n  'ball-fall': 3,\n  'ball-fussion': 4,\n  'ball-grid-beat': 9,\n  'ball-grid-pulse': 9,\n  'ball-newton-cradle': 4,\n  'ball-pulse': 3,\n  'ball-pulse-rise': 5,\n  'ball-pulse-sync': 3,\n  'ball-rotate': 1,\n  'ball-running-dots': 5,\n  'ball-scale': 1,\n  'ball-scale-multiple': 3,\n  'ball-scale-pulse': 2,\n  'ball-scale-ripple': 1,\n  'ball-scale-ripple-multiple': 3,\n  'ball-spin': 8,\n  'ball-spin-clockwise': 8,\n  'ball-spin-clockwise-fade': 8,\n  'ball-spin-clockwise-fade-rotating': 8,\n  'ball-spin-fade': 8,\n  'ball-spin-fade-rotating': 8,\n  'ball-spin-rotate': 2,\n  'ball-square-clockwise-spin': 8,\n  'ball-square-spin': 8,\n  'ball-triangle-path': 3,\n  'ball-zig-zag': 2,\n  'ball-zig-zag-deflect': 2,\n  'cog': 1,\n  'cube-transition': 2,\n  'fire': 3,\n  'line-scale': 5,\n  'line-scale-party': 5,\n  'line-scale-pulse-out': 5,\n  'line-scale-pulse-out-rapid': 5,\n  'line-spin-clockwise-fade': 8,\n  'line-spin-clockwise-fade-rotating': 8,\n  'line-spin-fade': 8,\n  'line-spin-fade-rotating': 8,\n  'pacman': 6,\n  'square-jelly-box': 2,\n  'square-loader': 1,\n  'square-spin': 1,\n  'timer': 1,\n  'triangle-skew-spin': 1\n};\n\nexport const DEFAULTS = {\n  BD_COLOR: 'rgba(51,51,51,0.8)',\n  SPINNER_COLOR: '#fff',\n  SPINNER_TYPE: 'ball-scale-multiple',\n  Z_INDEX: 99999,\n};\n\nexport const PRIMARY_SPINNER = 'primary';\n\nexport type Size = 'default' | 'small' | 'medium' | 'large';\n\nexport interface Spinner {\n  bdColor?: string;\n  size?: Size;\n  color?: string;\n  type?: string;\n  fullScreen?: boolean;\n  zIndex?: number;\n  template?: string;\n}\n\nexport class NgxSpinner {\n  name: string;\n  bdColor: string;\n  size: Size;\n  color: string;\n  type: string;\n  class: string;\n  divCount: number;\n  divArray: Array<number>;\n  fullScreen: boolean;\n  show: boolean;\n  zIndex: number;\n  template: string;\n\n  constructor(init?: Partial<NgxSpinner>) {\n    Object.assign(this, init);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, ReplaySubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { NgxSpinner, PRIMARY_SPINNER, Spinner } from './ngx-spinner.enum';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxSpinnerService {\n  /**\n   * Spinner observable\n   *\n   * @memberof NgxSpinnerService\n   */\n  private spinnerObservable = new ReplaySubject<NgxSpinner>(1);\n  /**\n   * Creates an instance of NgxSpinnerService.\n   * @memberof NgxSpinnerService\n   */\n  constructor() { }\n  /**\n  * Get subscription of desired spinner\n  * @memberof NgxSpinnerService\n  **/\n  getSpinner(name: string): Observable<NgxSpinner> {\n    return this.spinnerObservable.asObservable().pipe(filter((x: NgxSpinner) => x && x.name === name));\n  }\n  /**\n   * To show spinner\n   *\n   * @memberof NgxSpinnerService\n   */\n  show(name: string = PRIMARY_SPINNER, spinner?: Spinner) {\n    const showPromise = new Promise((resolve, _reject) => {\n      if (spinner && Object.keys(spinner).length) {\n        spinner['name'] = name;\n        this.spinnerObservable.next(new NgxSpinner({ ...spinner, show: true }));\n        resolve(true);\n      } else {\n        this.spinnerObservable.next(new NgxSpinner({ name, show: true }));\n        resolve(true);\n      }\n    });\n    return showPromise;\n  }\n  /**\n  * To hide spinner\n  *\n  * @memberof NgxSpinnerService\n  */\n  hide(name: string = PRIMARY_SPINNER, debounce: number = 0) {\n    const hidePromise = new Promise((resolve, _reject) => {\n      setTimeout(() => {\n        this.spinnerObservable.next(new NgxSpinner({ name, show: false }));\n        resolve(true);\n      }, debounce);\n    });\n    return hidePromise;\n  }\n}\n","import {\n  Component,\n  OnDestroy,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChange,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { NgxSpinnerService } from './ngx-spinner.service';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { LOADERS, DEFAULTS, Size, NgxSpinner, PRIMARY_SPINNER } from './ngx-spinner.enum';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n@Component({\n  selector: 'ngx-spinner',\n  templateUrl: 'ngx-spinner.component.html',\n  styleUrls: ['ngx-spinner.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  animations: [\n    trigger('fadeIn', [\n      state('in', style({ opacity: 1 })),\n      transition(':enter', [\n        style({ opacity: 0 }),\n        animate(300)\n      ]),\n      transition(':leave',\n        animate(200, style({ opacity: 0 })))\n    ])\n  ]\n})\nexport class NgxSpinnerComponent implements OnDestroy, OnInit, OnChanges {\n\n  /**\n   * To set backdrop color\n   * Only supports RGBA color format\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() bdColor: string;\n  /**\n   * To set spinner size\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() size: Size;\n  /**\n   * To set spinner color(DEFAULTS.SPINNER_COLOR)\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() color: string;\n  /**\n   * To set type of spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() type: string;\n  /**\n   * To toggle fullscreen mode\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() fullScreen: boolean;\n  /**\n   * Spinner name\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() name: string;\n  /**\n   * z-index value\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() zIndex: number;\n  /**\n   * Custom template for spinner/loader\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  @Input() template: string;\n  /**\n   * Spinner Object\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  spinner: NgxSpinner = new NgxSpinner();\n  /**\n   * Array for spinner's divs\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  divArray: Array<number>;\n  /**\n   * Counter for div\n   *\n   * @memberof NgxSpinnerComponent\n   *\n   */\n  divCount: number;\n  /**\n   * Show spinner\n   *\n   * @memberof NgxSpinnerComponent\n  **/\n  show: boolean;\n  /**\n   * Unsubscribe from spinner's observable\n   *\n   * @memberof NgxSpinnerComponent\n  **/\n  ngUnsubscribe: Subject<void> = new Subject();\n\n  /**\n   * Creates an instance of NgxSpinnerComponent.\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  constructor(private spinnerService: NgxSpinnerService, private changeDetector: ChangeDetectorRef) {\n    this.bdColor = DEFAULTS.BD_COLOR;\n    this.zIndex = DEFAULTS.Z_INDEX;\n    this.color = DEFAULTS.SPINNER_COLOR;\n    this.type = DEFAULTS.SPINNER_TYPE;\n    this.size = 'large';\n    this.fullScreen = true;\n    this.name = PRIMARY_SPINNER;\n    this.template = null;\n\n    this.divArray = [];\n    this.divCount = 0;\n    this.show = false;\n  }\n  /**\n   * Initialization method\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnInit() {\n    this.setDefaultOptions();\n    this.spinnerService.getSpinner(this.name)\n      .pipe(\n        takeUntil(this.ngUnsubscribe)\n      )\n      .subscribe((spinner: NgxSpinner) => {\n        this.setDefaultOptions();\n        Object.assign(this.spinner, spinner);\n        if (spinner.show) {\n          this.onInputChange();\n        }\n        this.changeDetector.markForCheck();\n      });\n  }\n  /**\n   * To set default ngx-spinner options\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  setDefaultOptions = () => {\n    this.spinner = new NgxSpinner({\n      name: this.name,\n      bdColor: this.bdColor,\n      size: this.size,\n      color: this.color,\n      type: this.type,\n      fullScreen: this.fullScreen,\n      divArray: this.divArray,\n      divCount: this.divCount,\n      show: this.show,\n      zIndex: this.zIndex,\n      template: this.template,\n    });\n  }\n  /**\n   * On changes event for input variables\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnChanges(changes: { [propKey: string]: SimpleChange }) {\n    for (const propName in changes) {\n      if (propName) {\n        const changedProp = changes[propName];\n        if (changedProp.isFirstChange()) {\n          return;\n        } else if (typeof changedProp.currentValue !== 'undefined' && changedProp.currentValue !== changedProp.previousValue) {\n          if (changedProp.currentValue !== '') {\n            this.spinner[propName] = changedProp.currentValue;\n          }\n        }\n      }\n    }\n  }\n  /**\n   * To get class for spinner\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  getClass(type: string, size: Size): string {\n    this.spinner.divCount = LOADERS[type];\n    this.spinner.divArray = Array(this.spinner.divCount).fill(0).map((x, i) => i);\n    let sizeClass = '';\n    switch (size.toLowerCase()) {\n      case 'small':\n        sizeClass = 'la-sm';\n        break;\n      case 'medium':\n        sizeClass = 'la-2x';\n        break;\n      case 'large':\n        sizeClass = 'la-3x';\n        break;\n      default:\n        break;\n    }\n    return 'la-' + type + ' ' + sizeClass;\n  }\n  /**\n   * Check if input variables have changed\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  onInputChange() {\n    this.spinner.class = this.getClass(this.spinner.type, this.spinner.size);\n  }\n  /**\n   * Component destroy event\n   *\n   * @memberof NgxSpinnerComponent\n   */\n  ngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxSpinnerComponent } from './ngx-spinner.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [NgxSpinnerComponent],\n  exports: [NgxSpinnerComponent]\n})\nexport class NgxSpinnerModule { }\n","/*\n * Public API Surface of ngx-spinner\n */\nexport * from './lib/ngx-spinner.service';\nexport * from './lib/ngx-spinner.component';\nexport * from './lib/ngx-spinner.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}